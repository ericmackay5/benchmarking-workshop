# Connect to Confluent Cloud
bootstrap.servers=pkc-n00kk.us-east-1.aws.confluent.cloud:9092
security.protocol=SASL_SSL
sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username='IXRFA7BRHYS2U5A4' password='mH5fhaLQpFf0jvMEzjTCut3AgspDlW44wYn5da3JyODuOSGIhlQKM3FLQolauBz/';
sasl.mechanism=PLAIN

# Consumer Properties

# The minimum amount of data the server should return for a fetch request.
# increase to ~1000000 to optimize throughput
# set to 1 to minimize latency
fetch.min.bytes=1

# The maximum amount of time the server will block before answering the fetch request if there isn’t sufficient data to immediately satisfy the requirement given by fetch.min.bytes.
fetch.max.wait.ms=500

# If true the consumer’s offset will be periodically committed in the background. Can set this to false and explicitly call commits in code with CommitSync() or CommitAsync()
enable.auto.commit=true

# Increase the session timeout to take into account potential network delays and to avoid soft failures.
session.timeout.ms=45000

# If you have have a poll() loop that spends much time processing messages:
    # 1. Increase the upper bound on the amount of time that a consumer can be idle before fetching more records
max.poll.interval.ms=300000

    # 2. Reduce the maximum size of batches the max.poll.records configuration parameter returns.
max.poll.records=500