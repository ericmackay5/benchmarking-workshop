# Connect to Confluent Cloud
bootstrap.servers='${BOOTSTRAP_SERVER}'
security.protocol=SASL_SSL
sasl.jaas.config="org.apache.kafka.common.security.plain.PlainLoginModule required username='${CLUSTER_API_KEY}' password='${CLUSTER_SECRET_KEY}';"
sasl.mechanism=PLAIN

# Producer Properties

# The producer will attempt to batch records together into fewer requests whenever multiple records are being sent to the same partition.
# Requests sent to brokers will contain multiple batches, one for each partition with data available to be sent.
# Increase to 100000 - 200000 to optimize throughput (default 16384)
batch.size=100000

# Rather than immediately sending out a record, the producer will wait for up to the given delay to allow other records to be sent so that the sends can be batched together
# Increase to 10-100 to optimize throughput
# Set to 0 to reduce latency
linger.ms=100

# Compression requires more CPU cycles but reduces network bandwidth
# Valid values: [lz4, gzip, snappy, zstd, none] (default none)
compression.type=none

# The number of acknowledgments the producer requires the leader to have received before considering a request complete. Valid values: [all, -1, 0, 1] (default all)
# Less acks = less latency, but less durability
acks=-1

# Increase if there are a lot of partitions. The total bytes of memory the producer can use to buffer records waiting to be sent to the server. (default 33554432)
buffer.memory=33554432

# Duplication and Ordering
# set to 0 to preserve message order while request pipelining and max.in.flight.requests.per.connection=1, enable.idempotence=true
retries=2147483647

# Idempotent producers can handle duplicate messages and preserve message order even with request pipelining
enable.idempotence=false

# The maximum number of unacknowledged requests the client will send on a single connection before blocking.
max.in.flight.requests.per.connection=1

# An upper bound on the time to report success or failure after a call to send() returns. This limits the total time that a record will be delayed prior to sending, 
# the time to await acknowledgement from the broker (if expected), and the time allowed for retriable send failures.
delivery.timeout.ms=120000
